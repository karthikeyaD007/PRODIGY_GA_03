import random
from collections import defaultdict

class MarkovChainTextGenerator:
    def __init__(self, order=1):
        self.order = order  # Markov chain order
        self.transition_counts = defaultdict(lambda: defaultdict(int))  # Transition counts
        self.start_chars = []  # List to store start characters of sentences

    def train(self, text):
        # Clean the text (remove extra spaces, etc.)
        text = text.strip().replace("\n", " ").replace("\r", "")

        # Split text into sentences (for simplicity, we'll treat sentences as sequences of characters)
        sentences = text.split('.')

        # Process each sentence
        for sentence in sentences:
            if len(sentence) == 0:
                continue
            # Add start character to list
            self.start_chars.append(sentence[0])
            # Convert sentence into tuples of length self.order+1
            ngrams = [sentence[i:i+self.order+1] for i in range(len(sentence)-self.order)]
            # Count occurrences of each transition
            for ngram in ngrams:
                self.transition_counts[ngram[:-1]][ngram[-1]] += 1

    def generate_text(self, max_length=100, seed=None):
        if seed is None:
            current_state = random.choice(self.start_chars)
        else:
            current_state = seed
        generated_text = [current_state]

        for _ in range(max_length):
            if current_state in self.transition_counts:
                next_char = random.choices(
                    list(self.transition_counts[current_state].keys()),
                    list(self.transition_counts[current_state].values())
                )[0]
                generated_text.append(next_char)
                current_state = current_state[1:] + next_char
            else:
                break

        return ''.join(generated_text)

# Example usage
text = """
The quick brown fox jumps over the lazy dog.
She sells sea shells by the sea shore.
How much wood would a woodchuck chuck if a woodchuck could chuck wood?
"""

# Initialize and train the Markov chain generator
generator = MarkovChainTextGenerator(order=2)
generator.train(text)

# Generate text
generated_text = generator.generate_text(max_length=200, seed=None)
print("Generated Text:\n", generated_text)
